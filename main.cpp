#include <QtCore/QVector>
#include <iostream>
#include "KoskoNetwork.h"

int main()
{
	KoskoNetwork Test (16, 4, .9);
	QVector<double> XV;
	XV				<<0<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1
					<<0<<0<<1<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1
					<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0
					<<0<<1<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0<<0<<0<<1<<0

					<<1<<1<<1<<1<<0<<0<<1<<0<<0<<1<<0<<0<<1<<1<<1<<1
					<<0<<1<<1<<1<<0<<0<<1<<1<<0<<1<<0<<0<<1<<1<<1<<1
					<<1<<1<<1<<1<<0<<0<<1<<0<<0<<1<<0<<0<<1<<1<<1<<0
					<<1<<1<<1<<1<<0<<0<<1<<1<<0<<1<<0<<0<<1<<1<<1<<0

					<<1<<1<<1<<1<<0<<0<<1<<0<<0<<0<<0<<1<<1<<1<<1<<1
					<<1<<1<<1<<0<<0<<0<<0<<1<<0<<0<<1<<1<<1<<1<<1<<1
					<<1<<1<<1<<1<<0<<0<<1<<0<<0<<0<<1<<0<<0<<1<<1<<1
					<<1<<1<<1<<0<<0<<0<<0<<1<<0<<0<<1<<0<<1<<1<<1<<1

					<<0<<1<<0<<1<<0<<1<<0<<1<<0<<1<<1<<1<<0<<0<<0<<1
					<<0<<1<<0<<1<<0<<1<<1<<1<<0<<0<<0<<1<<0<<0<<0<<1
					<<1<<0<<0<<1<<1<<0<<0<<1<<1<<1<<1<<1<<0<<0<<0<<1
					<<0<<1<<0<<1<<1<<1<<1<<1<<0<<0<<0<<1<<0<<0<<0<<1
					;
	QVector<int> TV;
	TV<<0<<0<<0<<0<<1<<1<<1<<1<<2<<2<<2<<2<<3<<3<<3<<3;
	Test.learn(16,XV,TV);
	Test.saveWeights("weights.txt");
	Test.loadWeights("weights.txt");
	QVector<double> XR;
	XR<<0<<1<<1<<1<<0<<1<<1<<0<<0<<1<<0<<0<<1<<1<<1<<0;
	QVector<double> answer;
	answer = Test.recognize(XR);
	for (int i = 0; i < 4; i++) {
		std::cout << answer.at(i) << " ";
	}
}
